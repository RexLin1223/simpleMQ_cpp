// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: customized_message.proto

#include "customized_message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_customized_5fmessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VisitorProperty_customized_5fmessage_2eproto;
namespace message {
class VisitorPropertyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VisitorProperty> _instance;
} _VisitorProperty_default_instance_;
class PublisherMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PublisherMessage> _instance;
} _PublisherMessage_default_instance_;
class SubscriberMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubscriberMessage> _instance;
} _SubscriberMessage_default_instance_;
}  // namespace message
static void InitDefaultsscc_info_PublisherMessage_customized_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_PublisherMessage_default_instance_;
    new (ptr) ::message::PublisherMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::PublisherMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PublisherMessage_customized_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PublisherMessage_customized_5fmessage_2eproto}, {
      &scc_info_VisitorProperty_customized_5fmessage_2eproto.base,}};

static void InitDefaultsscc_info_SubscriberMessage_customized_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_SubscriberMessage_default_instance_;
    new (ptr) ::message::SubscriberMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::SubscriberMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubscriberMessage_customized_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SubscriberMessage_customized_5fmessage_2eproto}, {
      &scc_info_VisitorProperty_customized_5fmessage_2eproto.base,}};

static void InitDefaultsscc_info_VisitorProperty_customized_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::_VisitorProperty_default_instance_;
    new (ptr) ::message::VisitorProperty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::VisitorProperty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VisitorProperty_customized_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_VisitorProperty_customized_5fmessage_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_customized_5fmessage_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_customized_5fmessage_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_customized_5fmessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_customized_5fmessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::VisitorProperty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::VisitorProperty, type_),
  PROTOBUF_FIELD_OFFSET(::message::VisitorProperty, category_),
  PROTOBUF_FIELD_OFFSET(::message::VisitorProperty, topic_),
  PROTOBUF_FIELD_OFFSET(::message::VisitorProperty, extension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::PublisherMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::PublisherMessage, properties_),
  PROTOBUF_FIELD_OFFSET(::message::PublisherMessage, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::SubscriberMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::SubscriberMessage, properties_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::message::VisitorProperty)},
  { 9, -1, sizeof(::message::PublisherMessage)},
  { 16, -1, sizeof(::message::SubscriberMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_VisitorProperty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_PublisherMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::_SubscriberMessage_default_instance_),
};

const char descriptor_table_protodef_customized_5fmessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030customized_message.proto\022\007message\"i\n\017V"
  "isitorProperty\022\"\n\004type\030\001 \001(\0162\024.message.V"
  "isitorType\022\020\n\010category\030\002 \001(\t\022\r\n\005topic\030\003 "
  "\001(\t\022\021\n\textension\030\004 \001(\t\"Q\n\020PublisherMessa"
  "ge\022,\n\nproperties\030\001 \001(\0132\030.message.Visitor"
  "Property\022\017\n\007payload\030\002 \001(\t\"A\n\021SubscriberM"
  "essage\022,\n\nproperties\030\001 \001(\0132\030.message.Vis"
  "itorProperty*9\n\013VisitorType\022\013\n\007unknown\020\000"
  "\022\r\n\tpublisher\020\001\022\016\n\nsubscriber\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_customized_5fmessage_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_customized_5fmessage_2eproto_sccs[3] = {
  &scc_info_PublisherMessage_customized_5fmessage_2eproto.base,
  &scc_info_SubscriberMessage_customized_5fmessage_2eproto.base,
  &scc_info_VisitorProperty_customized_5fmessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_customized_5fmessage_2eproto_once;
static bool descriptor_table_customized_5fmessage_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_customized_5fmessage_2eproto = {
  &descriptor_table_customized_5fmessage_2eproto_initialized, descriptor_table_protodef_customized_5fmessage_2eproto, "customized_message.proto", 359,
  &descriptor_table_customized_5fmessage_2eproto_once, descriptor_table_customized_5fmessage_2eproto_sccs, descriptor_table_customized_5fmessage_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_customized_5fmessage_2eproto::offsets,
  file_level_metadata_customized_5fmessage_2eproto, 3, file_level_enum_descriptors_customized_5fmessage_2eproto, file_level_service_descriptors_customized_5fmessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_customized_5fmessage_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_customized_5fmessage_2eproto), true);
namespace message {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VisitorType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_customized_5fmessage_2eproto);
  return file_level_enum_descriptors_customized_5fmessage_2eproto[0];
}
bool VisitorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void VisitorProperty::InitAsDefaultInstance() {
}
class VisitorProperty::_Internal {
 public:
};

VisitorProperty::VisitorProperty()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.VisitorProperty)
}
VisitorProperty::VisitorProperty(const VisitorProperty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_category().empty()) {
    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_topic().empty()) {
    topic_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  extension_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_extension().empty()) {
    extension_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.extension_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:message.VisitorProperty)
}

void VisitorProperty::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VisitorProperty_customized_5fmessage_2eproto.base);
  category_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extension_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

VisitorProperty::~VisitorProperty() {
  // @@protoc_insertion_point(destructor:message.VisitorProperty)
  SharedDtor();
}

void VisitorProperty::SharedDtor() {
  category_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extension_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void VisitorProperty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VisitorProperty& VisitorProperty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VisitorProperty_customized_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void VisitorProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:message.VisitorProperty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  topic_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  extension_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _internal_metadata_.Clear();
}

const char* VisitorProperty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .message.VisitorType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::message::VisitorType>(val));
        } else goto handle_unusual;
        continue;
      // string category = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_category(), ptr, ctx, "message.VisitorProperty.category");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string topic = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_topic(), ptr, ctx, "message.VisitorProperty.topic");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string extension = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_extension(), ptr, ctx, "message.VisitorProperty.extension");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VisitorProperty::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.VisitorProperty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.VisitorType type = 1;
  if (this->type() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string category = 2;
  if (this->category().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_category().data(), static_cast<int>(this->_internal_category().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "message.VisitorProperty.category");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_category(), target);
  }

  // string topic = 3;
  if (this->topic().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_topic().data(), static_cast<int>(this->_internal_topic().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "message.VisitorProperty.topic");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_topic(), target);
  }

  // string extension = 4;
  if (this->extension().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_extension().data(), static_cast<int>(this->_internal_extension().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "message.VisitorProperty.extension");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_extension(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.VisitorProperty)
  return target;
}

size_t VisitorProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.VisitorProperty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string category = 2;
  if (this->category().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_category());
  }

  // string topic = 3;
  if (this->topic().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_topic());
  }

  // string extension = 4;
  if (this->extension().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_extension());
  }

  // .message.VisitorType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VisitorProperty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.VisitorProperty)
  GOOGLE_DCHECK_NE(&from, this);
  const VisitorProperty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VisitorProperty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.VisitorProperty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.VisitorProperty)
    MergeFrom(*source);
  }
}

void VisitorProperty::MergeFrom(const VisitorProperty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.VisitorProperty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.category().size() > 0) {

    category_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.category_);
  }
  if (from.topic().size() > 0) {

    topic_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.topic_);
  }
  if (from.extension().size() > 0) {

    extension_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.extension_);
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void VisitorProperty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.VisitorProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisitorProperty::CopyFrom(const VisitorProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.VisitorProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisitorProperty::IsInitialized() const {
  return true;
}

void VisitorProperty::InternalSwap(VisitorProperty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  category_.Swap(&other->category_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  topic_.Swap(&other->topic_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  extension_.Swap(&other->extension_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VisitorProperty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PublisherMessage::InitAsDefaultInstance() {
  ::message::_PublisherMessage_default_instance_._instance.get_mutable()->properties_ = const_cast< ::message::VisitorProperty*>(
      ::message::VisitorProperty::internal_default_instance());
}
class PublisherMessage::_Internal {
 public:
  static const ::message::VisitorProperty& properties(const PublisherMessage* msg);
};

const ::message::VisitorProperty&
PublisherMessage::_Internal::properties(const PublisherMessage* msg) {
  return *msg->properties_;
}
PublisherMessage::PublisherMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.PublisherMessage)
}
PublisherMessage::PublisherMessage(const PublisherMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_payload().empty()) {
    payload_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from._internal_has_properties()) {
    properties_ = new ::message::VisitorProperty(*from.properties_);
  } else {
    properties_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:message.PublisherMessage)
}

void PublisherMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PublisherMessage_customized_5fmessage_2eproto.base);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  properties_ = nullptr;
}

PublisherMessage::~PublisherMessage() {
  // @@protoc_insertion_point(destructor:message.PublisherMessage)
  SharedDtor();
}

void PublisherMessage::SharedDtor() {
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete properties_;
}

void PublisherMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PublisherMessage& PublisherMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PublisherMessage_customized_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void PublisherMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.PublisherMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && properties_ != nullptr) {
    delete properties_;
  }
  properties_ = nullptr;
  _internal_metadata_.Clear();
}

const char* PublisherMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .message.VisitorProperty properties = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_properties(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_payload(), ptr, ctx, "message.PublisherMessage.payload");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PublisherMessage::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.PublisherMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.VisitorProperty properties = 1;
  if (this->has_properties()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::properties(this), target, stream);
  }

  // string payload = 2;
  if (this->payload().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_payload().data(), static_cast<int>(this->_internal_payload().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "message.PublisherMessage.payload");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.PublisherMessage)
  return target;
}

size_t PublisherMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.PublisherMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_payload());
  }

  // .message.VisitorProperty properties = 1;
  if (this->has_properties()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *properties_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PublisherMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.PublisherMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PublisherMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PublisherMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.PublisherMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.PublisherMessage)
    MergeFrom(*source);
  }
}

void PublisherMessage::MergeFrom(const PublisherMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.PublisherMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  if (from.has_properties()) {
    _internal_mutable_properties()->::message::VisitorProperty::MergeFrom(from._internal_properties());
  }
}

void PublisherMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.PublisherMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PublisherMessage::CopyFrom(const PublisherMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.PublisherMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PublisherMessage::IsInitialized() const {
  return true;
}

void PublisherMessage::InternalSwap(PublisherMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(properties_, other->properties_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PublisherMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubscriberMessage::InitAsDefaultInstance() {
  ::message::_SubscriberMessage_default_instance_._instance.get_mutable()->properties_ = const_cast< ::message::VisitorProperty*>(
      ::message::VisitorProperty::internal_default_instance());
}
class SubscriberMessage::_Internal {
 public:
  static const ::message::VisitorProperty& properties(const SubscriberMessage* msg);
};

const ::message::VisitorProperty&
SubscriberMessage::_Internal::properties(const SubscriberMessage* msg) {
  return *msg->properties_;
}
SubscriberMessage::SubscriberMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.SubscriberMessage)
}
SubscriberMessage::SubscriberMessage(const SubscriberMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_properties()) {
    properties_ = new ::message::VisitorProperty(*from.properties_);
  } else {
    properties_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:message.SubscriberMessage)
}

void SubscriberMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubscriberMessage_customized_5fmessage_2eproto.base);
  properties_ = nullptr;
}

SubscriberMessage::~SubscriberMessage() {
  // @@protoc_insertion_point(destructor:message.SubscriberMessage)
  SharedDtor();
}

void SubscriberMessage::SharedDtor() {
  if (this != internal_default_instance()) delete properties_;
}

void SubscriberMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubscriberMessage& SubscriberMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubscriberMessage_customized_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void SubscriberMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:message.SubscriberMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && properties_ != nullptr) {
    delete properties_;
  }
  properties_ = nullptr;
  _internal_metadata_.Clear();
}

const char* SubscriberMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .message.VisitorProperty properties = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_properties(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubscriberMessage::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.SubscriberMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.VisitorProperty properties = 1;
  if (this->has_properties()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::properties(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.SubscriberMessage)
  return target;
}

size_t SubscriberMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.SubscriberMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .message.VisitorProperty properties = 1;
  if (this->has_properties()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *properties_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscriberMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.SubscriberMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscriberMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubscriberMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.SubscriberMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.SubscriberMessage)
    MergeFrom(*source);
  }
}

void SubscriberMessage::MergeFrom(const SubscriberMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.SubscriberMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_properties()) {
    _internal_mutable_properties()->::message::VisitorProperty::MergeFrom(from._internal_properties());
  }
}

void SubscriberMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.SubscriberMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscriberMessage::CopyFrom(const SubscriberMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.SubscriberMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscriberMessage::IsInitialized() const {
  return true;
}

void SubscriberMessage::InternalSwap(SubscriberMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(properties_, other->properties_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubscriberMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace message
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::message::VisitorProperty* Arena::CreateMaybeMessage< ::message::VisitorProperty >(Arena* arena) {
  return Arena::CreateInternal< ::message::VisitorProperty >(arena);
}
template<> PROTOBUF_NOINLINE ::message::PublisherMessage* Arena::CreateMaybeMessage< ::message::PublisherMessage >(Arena* arena) {
  return Arena::CreateInternal< ::message::PublisherMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::message::SubscriberMessage* Arena::CreateMaybeMessage< ::message::SubscriberMessage >(Arena* arena) {
  return Arena::CreateInternal< ::message::SubscriberMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
